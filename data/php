#!/usr/bin/env php
<?php

$projectDirHost = dirname(dirname(dirname($_SERVER['PHP_SELF'])));
$projectDirGuest = '/vagrant';
$homeDirHost = $projectDirHost . '/.idea/vagrant';
$pipe = 'vagrant ssh -c ';
$commandPrefix = '';

chdir($projectDirHost);

// Detect Host IP
$hostIpFile = $homeDirHost . '/host_ip';
if (!file_exists($hostIpFile)) {
	$ip = shell_exec('vagrant ssh -c "sudo ip route | awk \'/default/ { print \$3; exit; }\'"');
	file_put_contents($hostIpFile, $ip);
}
$hostIp = trim(file_get_contents($hostIpFile));
if (!filter_var($hostIp, FILTER_VALIDATE_IP)) {
	throw new Exception('Cannot detect host IP, got value `' . $hostIp . '`.');
}

// Detect Project Dir on Guest
$projectDirGuestFile = $homeDirHost . '/vm_project_dir';
if (file_exists($projectDirGuestFile)) {
  $projectDirGuest = trim(file_get_contents($projectDirGuestFile));
}
$homeDirGuest = $projectDirGuest . '/.idea/vagrant';

// Detect Command Prefix
$commandPrefixFile = $homeDirHost . '/vm_command_prefix';
if (file_exists($commandPrefixFile)) {
  $commandPrefix = trim(file_get_contents($commandPrefixFile));
}

$arguments = $argv;
array_shift($arguments);
foreach ($arguments as $index => &$argument) {
	// IP mapping
	$argument = str_replace(array('127.0.0.1', 'localhost'), $hostIp, $argument);

	// Paths mapping
	$filePath = $argument;
	if (strrpos($filePath, '.coverage') == strlen($filePath) - 9) {
        // Mapping output files to remote paths, link files
        if(!is_dir($homeDirHost . '/output/')) {
            mkdir($homeDirHost . '/output/', 0777, true);
        }
        file_put_contents($filePath, '');
        symlink($filePath, $homeDirHost . '/output/' . basename($filePath));
        $arguments[$index] = $homeDirGuest . '/output/' . basename($filePath);
	} elseif (file_exists($filePath)) {
		if (strpos($filePath, $projectDirHost) !== false) {
			// Mapping project paths to remote paths
			$arguments[$index] = str_replace($projectDirHost, $projectDirGuest, $filePath);
		} else {
			// Mapping any other local system paths to remote paths, upload files
			if(!is_dir($homeDirHost . '/scripts/')) {
				mkdir($homeDirHost . '/scripts/', 0777, true);
			}
			copy($filePath, $homeDirHost . '/scripts/' . basename($filePath));
			$arguments[$index] = $homeDirGuest . '/scripts/' . basename($filePath);
		}
	}

	$argument = escapeshellarg($argument);
}


// Get XDEBUG environment variable
$env = '';
if (isset($_SERVER['XDEBUG_CONFIG'])) {
	$env = "XDEBUG_CONFIG='" . $_SERVER['XDEBUG_CONFIG'] . "'";
}

$includePaths = array('.', $projectDirGuest . '/vendor/phpunit/phpunit');
$arguments = array_merge(array('-d', 'include_path=' . implode(':', $includePaths)), $arguments);

passthru($pipe . '"' .$commandPrefix. ' ' . $env . ' php ' . implode(' ', $arguments) . '"');
